# this is a first draft of the CarePlan comments API
swagger: '2.0'
info:
  title: API for professional services published over National Service Architecture
  description: Get comments and notifications related to the Care Plan
  version: "0.0.1"
# the domain of the service
host: oda.medidemo.fi
# array of all supported schemes
schemes:
  - https
# will be prefixed to all paths
basePath: /fhir
produces:
  - application/json+fhir;charset=UTF-8
consumes:
  - application/json+fhir;charset=UTF-8

# using 500 for default error responses

paths:
  /Communication:
    # post:
    #   summary: Endpoint to create new CarePlan comment
    #   description: Endpoint where a new comment can be added to the careplan
    #   consumes:
    #     - application/json+fhir;charset=UTF-8
    #   parameters:
    #     - name: Communication
    #       description: Communication resource
    #       in: body
    #       required: true
    #       schema:
    #         $ref: '#/definitions/Communication'
    #   tags:
    #     - CarePlan comments and notifications
    #   responses:
    #     201:
    #       description: OK
    #       schema:
    #         $ref: '#/definitions/OperationOutcome' #_CommunicationPost'
    #     400:
    #       description: Error in request
    #       schema:
    #         $ref: '#/definitions/OperationOutcome'
    #     500:
    #       description: Unexpected error
    #       schema:
    #         $ref: '#/definitions/OperationOutcome_Error'

# problem with parameters
    get:
      summary: Get comments related to the careplan, searched and filtered by different parameters
      description: The search path for Communication
      parameters:
        - name: based%2don
#        - name: "based-on" ## correct parameter name? is it "based-on"?
          in: query
          description: The id of the careplan. Format is CarePlan/{id}
          required: true
          type: string
#          pattern: "CarePlan/^[a-zA-Z0-9_-]+$"
          x-example: "CarePlan/CAREPLAN1-PATIENT1"
        # - name: sender
        #   in: query
        #   description: The one who sent the message
        #   required: false
        #   type: string
        #   x-example: "PRACTITIONER1"
        # - name: patient
        #   in: query
        #   description: The receiver of the message
        #   required: false
        #   type: string
        #   pattern: "Patient/^[a-zA-Z0-9_-]+$"
        #   x-example: "Patient/PATIENT1"
      tags:
        - CarePlan comments and notifications
        - Communication
      responses:
        200:
          description: An array of comments
          schema:
            $ref: '#/definitions/Communication'
        400:
          description: Error in request
          schema:
            $ref: '#/definitions/OperationOutcome'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OperationOutcome_Error'

# this does not work??
  # /Communication/$search:
  #   get:
  #     parameters:
  #       - name: based-on # this wrong?
  #         in: path
  #         required: false
  #         description: id of the CarePlan
  #         type: string
  #         pattern: "CarePlan/^[a-zA-Z0-9_-]+$"
  #         x-example: 'CarePlan/CAREPLAN1-PATIENT1'
  #     tags:
  #       - CarePlan comments and notifications
  #     responses:
  #       200:
  #         description: Communication related to CarePlan
  #         schema:
  #           $ref: '#/definitions/BundleCarePlanCommunication'
  #       500:
  #         description: Unexpected error
  #         schema:
  #           $ref: '#/definitions/Error'

# works in dredd
  # /CarePlan/{id}:
  #   get:
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: CarePlan corresponding to the id
  #         type: string
  #         pattern: "^[a-zA-Z0-9_-]+$"
  #         x-example: 'CAREPLAN1-PATIENT1'
  #     tags:
  #       - CarePlan comments and notifications
  #     responses:
  #       200:
  #         description: CarePlan with new comments
  #         schema:
  #           $ref: '#/definitions/CarePlan'
  #       500:
  #         description: Unexpected error
  #         schema:
  #           $ref: '#/definitions/OperationOutcome_Error'
  #
  # /CarePlan:
  #   get:
  #     summary: Search CarePlan resources. The return message will be checked to see if query
  #       maker is authorized to access the information
  #     description: Return CarePlan information according to given parameters
  #     parameters:
  #         - name: goal
  #           in: query
  #           required: false
  #           type: string
  #           description: query for the goal related to the CarePlan
  #           pattern: "Goal/^[a-zA-Z0-9_-]+$"
  #         - name: status
  #           in: query
  #           required: false
  #           type: string
  #         - name: subject
  #           in: query
  #           required: true
  #           type: string
  #           description: Who the careplan is meant for
  #           pattern: "Patient/^[a-zA-Z0-9_-]+$"
  #           x-example: "Patient/PATIENT1"
  #     responses:
  #         200:
  #           description: OK [Response message with Goal resource]
  #           schema:
  #             type: "object"
  #         400:
  #           description: Error in request
  #           schema:
  #             $ref: '#/definitions/OperationOutcome'
  #         500:
  #           description: Unexpected error
  #           schema:
  #             '$ref': '#/definitions/OperationOutcome_Error'

# no work, even though path in oda-fhir-service in CarePlanProvider
  /CareTeam/$search-servicerequests:
    get:
      summary: Search CarePlan resources that the professional is authorized to access (include linked CareTeam and EpisodeOfCare resources)
      description: Return Careteams and EpisodeOfCares of professional
      tags:
        - Professional service request list
      parameters:
        - name: practitioner
          in: query
          required: true
          type: string
          description: Query for the CareTeams and EpisodeOfCares corresponding to a professional
          pattern: "^[a-zA-Z0-9_-]+$"
          x-example: "PRACTITIONER1"
      responses:
        200:
          description: OK [Bundle with CareTeam and EpisodeOfCare resources]
          schema:
              $ref: '#/definitions/Bundle'
#
# # insufficent rights to assign careplan
#   /CarePlan/{id}/$assign:
#     post:
#       description: Update (if exists) or create new EpisodeOfCare and set CareManager reference to Practitioner
#       consumes:
#         - application/json+fhir;charset=UTF-8
#       parameters:
#         - name: id
#           in: path
#           required: true
#           description: identifier for the careplan
#           type: string
#           pattern: "^[a-zA-Z0-9_-]+$"
#           x-example: "CAREPLAN1-PATIENT1"
#         - name: body
#           in: body
#           required: true
#           description: EpisodeOfCare to update/create
#           schema:
#             $ref: '#/definitions/EpisodeOfCare'
#         - name: practitioner
#           in: query
#           required: true
#           description: Update (if exists) or create new EpisodeOfCare and set CareManager reference to Practitioner
#           type: string
#           pattern: "^[a-zA-Z0-9_-]+$"
#           x-example: 'PRACTITIONER1'
#       tags:
#         - Professional service request list
#       responses:
#           200:
#             description: OK
#           500:
#             description: Unexpected error
#             schema:
#               '$ref': '#/definitions/Error'

definitions:
  Bundle:
    type: object
    properties:
      careteam:
        $ref: '#/definitions/CareTeam'
      careplan:
        $ref: '#/definitions/CarePlan'
      goal:
        $ref: '#/definitions/Goal'

  BundleCarePlanCommunication:
    type: object
    properties:
      communication:
        $ref: '#/definitions/Communication'



#      careteam:
#        type: object
#        description: CareTeam resource
#        items:
#          $ref: '#/definitions/CareTeam'
#      careplan:
#        type: object
#        description: CarePlan resource
#        items:
#          $ref: '#/definitions/CarePlan'

  # Communication:
  #   type: object
  #   description: Communication resource
  #   properties:
  #     id:
  #       type: string
  #       description: Unique identifier for the comment.
  #     category:
  #         type: string
  #         description: The current status of the comment.


  Communication:
    type: object
    description: Communication
    properties:
      resourceType:
        type: string
        enum:
          - "Communication"
      text:
        type: object
        properties:
          status:
            enum:
              - generated
          div:
            enum:
              - "You are progressing well! Good work!"
      status:
        enum:
          - preparation
          - in-progress
          - suspended
          - aborted
          - completed
          - entered-in-error
      category:
        type: array
        items:
          type: object
          properties:
            text:
              type: string
      subject:
        type: object
        properties:
          reference:
            type: string
#            example: Patient/PATIENT1
#            enum:
#              - "Patient/PATIENT1"
      basedOn:
        type: array
        items:
          type: object
          properties:
            reference:
              type: string
#              example: CarePlan/CAREPLAN1-PATIENT1
#              enum:
#                - "CarePlan/CAREPLAN1-PATIENT1"
      sent:
        type: string
#        format: date-time
#        enum:
#          - "2017-06-20T18:01:10-09:00"
      received:
        type: string
#        format: date-time
#        enum:
#          - "2017-06-20T18:01:10-09:00"
      sender:
        type: object
        properties:
          reference:
            type: string
#            example: Practitioner/PRACTITIONER1
#            enum:
#              - "Practitioner/PRACTITIONER1"
      recipient:
        type: array
        items:
          type: object
          properties:
            reference:
              type: string
#              example: Patient/PATIENT1
#              enum:
#                - "Patient/PATIENT1"
      payload:
        type: array
        items:
          type: object
          properties:
            contentString:
              type: string
    required:
      - resourceType
#      - text
      - status
      - category
      - subject
      - basedOn
      - sent
      - received
      - sender
      - recipient
      - payload
    example:
      resourceType: Communication
      text:
        status: generated
        div: You are progressing well! Good work!
      status: completed
      category:
        text: oda-careplan-comment
      subject:
        reference: Patient/PATIENT1
      basedOn:
        reference: CarePlan/CAREPLAN1-PATIENT1
      sent: "2017-06-20T18:01:10-08:00"
      received: "2017-06-20T18:01:10-09:00"
      sender:
        reference: Practitioner/PRACTITIONER1
      recipient:
        items:
          reference: Patient/PATIENT1
      payload:
        items:
          contentString: "You are progressing well! Good work!"





#           # schema-example:
#           #   {
#           #       "resourceType": "Communication",
#           #       "text": {
#           #           "status": "generated",
#           #           "div": "<div>You are progressing well! Good work!</div>"
#           #       },
#           #       "status": "completed",
#           #       "category": [{
#           #           "text": "oda-careplan-comment"
#           #       }],
#           #       "subject": {
#           #           "reference": "Patient/PATIENT1"
#           #       },
#           #       "basedOn": [{
#           #           "reference": "CarePlan/CAREPLAN1-PATIENT1"
#           #       }],
#           #       "sent": "2017-06-20T18:01:10-08:00",
#           #       "received": "2017-06-20T18:01:10-09:00",
#           #       "sender": {
#           #           "reference": "Practitioner/PRACTITIONER1"
#           #       },
#           #       "recipient": [{
#           #           "reference": "Patient/PATIENT1"
#           #       }],
#           #       "payload": [{
#           #           "contentString": "You are progressing well! Good work!"
#           #       }]
#           #   }




  CarePlan:
    type: object
    description: CarePlan resource
    properties:
      resourceType:
        type: string
      id:
        type: string
      meta:
        type: object
      identifier:
        type: array
      status:
        type: string
      category:
        type: array
      description:
        type: string
      subject:
        type: object
      context:
        type: object
      period:
        type: object
      author:
        type: array
      careTeam:
        type: array
      activity:
        type: array

  CareTeam:
    type: object
    description: CareTeam resource
    properties:
      id:
        type: string

  Goal:
    type: object
    properties:
      id:
        type: string

  EpisodeOfCare:
    type: object
    required:
      - resourceType
      - status
    description: EpisodeOfCare object
    properties:
      resourceType:
        type: string
        enum:
          - EpisodeOfCare
      id:
        type: string
      meta:
        type: object
      status:
        type: string
        enum:
          - planned
          - waitlist
          - active
          - onhold
          - finished
          - cancelled
          - entered-in-error
      patient:
        type: object
      careManager:
        type: object
      team:
        type: array



    # type: string
    # example:
    #     "resourceType": "EpisodeOfCare"
    #     "id": "EPISODEOFCARE1-PATIENT1"
    #     "meta":
    #       "versionId": "1"
    #       "lastUpdated": "2017-07-12T13:38:52.251+03:00"
    #     "status": "active"
    #     "patient":
    #       "reference": "Patient/PATIENT1"
    #     "careManager":
    #       "reference": "Practitioner/PRACTITIONER2"
    #     "team":
    #         "reference": "CareTeam/CARETEAM2-CARE"


  OperationOutcome_Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

  OperationOutcome:
    type: object
    required:
      - resourceType
      - issue
    properties:
      resourceType:
        type: string
      text:
        type: object
        properties:
          status:
            type: string
          div:
            type: string
      issue:
        type: array
        items:
          type: object
          properties:
            severity:
              type: string
            code:
              type: string
            diagnostics:
              type: string
