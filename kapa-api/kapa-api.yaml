# this is a first draft of the ODA API served via the National Service Architecture KaPA
swagger: '2.0'
info:
  title: API for professional services published over National Service Architecture
  description: Get comments and notifications related to the Care Planss
  version: "0.0.1"
# the domain of the service

#host: oda.medidemo.fi
host: localhost:6082

# array of all supported schemes
schemes:
  - https
# will be prefixed to all paths
basePath: /fhir
produces:
#  - text/plain
  - application/json+fhir;charset=UTF-8
consumes:
#  - text/plain
  - application/json+fhir;charset=UTF-8



# using 500 for default error responses

paths:


## todo: how to document websocket responses
#  /CarePlan/$sent:
#    post:
#      summary: New CarePlan notification
#      description: Async notification of a new CarePlan. Related EpisodeOfCare,
#        CareTeam, Practitioner and Person resources as parameters.
#      tags:
#        - Notifications



# queries have not been implemented yet. 2.8.2017
  /CarePlan:
    get:
      summary: Get CarePlan
      description: Search CarePlan resources. The return message will be checked to see if query
        maker is authorized to access the information
      parameters:
          - name: goal
            in: query
            required: false
            type: string
            description: query for the goal related to the CarePlan
            pattern: "Goal/^[a-zA-Z0-9_-]+$"
          - name: status
            in: query
            required: false
            type: string
          - name: subject
            in: query
            required: true
            type: string
            description: Who the careplan is meant for
            pattern: "Patient/^[a-zA-Z0-9_-]+$"
            x-example: "Patient/PATIENT1"
      responses:
          200:
            description: OK [Response message with Goal resource]
            schema:
              type: "object"
          400:
            description: Error in request
            schema:
              $ref: '#/definitions/OperationOutcome'
          500:
            description: Unexpected error
            schema:
              $ref: '#/definitions/OperationOutcome'

#works 2.8.2017
  /CarePlan/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: CarePlan corresponding to the id
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
          x-example: 'CAREPLAN1-PATIENT2'
      tags:
        - CarePlan comments and notifications
      responses:
        200:
          description: CarePlan with new comments
          schema:
            $ref: '#/definitions/CarePlan'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OperationOutcome'

# insufficent rights to assign careplan
  /CarePlan/{id}/$assign:
    post:
      description: Update (if exists) or create new EpisodeOfCare and set CareManager reference to Practitioner
      consumes:
        - application/json+fhir;charset=UTF-8
      parameters:
        - name: id
          in: path
          required: true
          description: identifier for the careplan
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
          x-example: "CAREPLAN1-PATIENT1"
        - name: body
          in: body
          required: true
          description: EpisodeOfCare to update/create
          schema:
            $ref: '#/definitions/EpisodeOfCare'
        - name: practitioner
          in: query
          required: true
          description: Update (if exists) or create new EpisodeOfCare and set CareManager reference to Practitioner
          type: string
          pattern: "^[a-zA-Z0-9_-]+$"
          x-example: 'PRACTITIONER1'
      tags:
        - Professional service request list
      responses:
        200:
          description: OK
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OperationOutcome'

# no work, even though path in oda-fhir-service in CarePlanProvider
  /CareTeam/$search-servicerequests:
    get:
      summary: Return Careteams and EpisodeOfCares of professional
      description: Search CarePlan resources that the professional is authorized to access (include linked CareTeam and EpisodeOfCare resources)
      tags:
        - Professional service request list
      parameters:
        - name: practitioner
          in: query
          required: true
          type: string
          description: Query for the CareTeams and EpisodeOfCares corresponding to a professional
          pattern: "^[a-zA-Z0-9_-]+$"
          x-example: "PRACTITIONER1"
      responses:
        200:
          description: OK [Bundle with CareTeam and EpisodeOfCare resources]
          schema:
              $ref: '#/definitions/Bundle'

# websocket operation, how to test in dredd 2.8.2017
#  /Communication
#    post:
 #     operations: socket
#    operations:
#      socket:
#        nickname: "/Communication"
#
#        summary: New Comment notification
#        description: Async notification of a new Comment. Related CarePlan and
#          Person resources as parameter.
#        tags:
#          - Notifications



  /Communication:
    post:
      summary: New CarePlan comment creation
      description: Endpoint where a new comment can be added to the careplan.
        The data structure of the comment should be structured according to FHIR
        specifications (http://hl7.org/fhir/communication.html).
      consumes:
        - application/json+fhir;charset=UTF-8
      parameters:
        - name: Communication
          description: Communication resource
          in: body
          required: true
          schema:
            $ref: '#/definitions/Communication'
      tags:
        - CarePlan comments and notifications
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/OperationOutcome'
        400:
          description: Error in request
          schema:
            $ref: '#/definitions/OperationOutcome'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OperationOutcome'
# problem with parameters
    get:
      summary: Search path for Communication
      description: Get comments related to the careplan, searched and filtered by different parameters
      parameters:
        - name:  based-on #based%2don
#        - name: "based-on" ## correct parameter name? is it "based-on"?
          in: query
          description: The id of the careplan. Format is CarePlan/{id}
          required: true
          type: string
#          pattern: "CarePlan/^[a-zA-Z0-9_-]+$"
          x-example: "CarePlan/CAREPLAN1-PATIENT1"
        # - name: sender
        #   in: query
        #   description: The one who sent the message
        #   required: false
        #   type: string
        #   x-example: "PRACTITIONER1"
        # - name: patient
        #   in: query
        #   description: The receiver of the message
        #   required: false
        #   type: string
        #   pattern: "Patient/^[a-zA-Z0-9_-]+$"
        #   x-example: "Patient/PATIENT1"
      tags:
        - CarePlan comments and notifications
      responses:
        200:
          description: An array of comments
          schema:
            $ref: '#/definitions/Communication'
        400:
          description: Error in request
          schema:
            $ref: '#/definitions/OperationOutcome'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OperationOutcome'

# has this been implemented? 2.8.2017
  /Communication/{id}/$seen:
    post:
      summary: Seen notifications
      description: Marks the notifications as seen
      tags:
        - Notifications
      parameters:
        - name: id
          in: path
          type: string
          required: true
          description: The identifier for the Communication resource that has
            been seen.
          x-example: COMMUNICATION1-PATIENT1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OperationOutcome'


# this does not work??
  /Communication/$search:
    get:
      parameters:
        - name: basedOn # based-on # this wrong?
          in: query
          required: false
          description: id of the CarePlan
          type: string
          pattern: "CarePlan/^[a-zA-Z0-9_-]+$"
          x-example: 'CarePlan/CAREPLAN1-PATIENT1'
      tags:
        - CarePlan comments and notifications
      responses:
        200:
          description: Communication related to CarePlan
          schema:
            $ref: '#/definitions/Bundle'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OperationOutcome'


definitions:
  Bundle:
    type: object
    properties:
      resourceType:
        type: string
        enum:
          - Bundle
      careteam:
        $ref: '#/definitions/CareTeam'
      careplan:
        $ref: '#/definitions/CarePlan'
      communication:
        $ref: '#/definitions/Communication'
      goal:
        $ref: '#/definitions/Goal'
    required:
      - resourceType
    example:
      resourceType: Bundle


  CarePlan:
    type: object
    description: CarePlan resource
    properties:
      resourceType:
        type: string
        enum:
          - CarePlan
      identifier:
        type: array
        items:
          type: object
          properties:
            system:
              type: string
            value:
              type: string
      status:
        type: string
        enum:
          - draft
          - active
          - suspended
          - completed
          - entered-in-error
          - cancelled
          - unknown
      category:
        type: array
        items:
          type: object
          properties:
            text:
              type: string
      description:
        type: string
      subject:
        type: object
        properties:
          reference:
            type: string
      context:
        type: object
        properties:
          reference:
            type: string
      period:
        type: object
        properties:
          start:
            type: string
            format: dateTime
          end:
            type: string
            format: dateTime
      author:
        type: array
        items:
          type: object
          properties:
            reference:
              type: string
      careTeam:
        type: array
        items:
          type: object
          properties:
            reference:
              type: string
      activity:
        type: array
        items:
          type: object
          properties:
            detail:
              type: object
              properties:
                category:
                  type: object
                  properties:
                    text:
                      type: string
                code:
                  type: object
                  properties:
                    coding:
                      type: array
                      items:
                        type: object
                        properties:
                          system:
                            type: string
                          version:
                            type: string
                          code:
                            type: string
    required:
      - resourceType
      - status
    example:
      resourceType: CarePlan
      status: active
      description:
        Nieluvaivasi on todennäköisesti lievä
        virustauti, jonka yhteydessä oloa voi
        helpottaa levolla ja tulehduskipulääkkeillä.
      subject:
        reference: Patient/PATIENT1
      period:
        start: "2017-03-01T00:00:00.000Z"
        end: "2017-04-02T23:59:59.999Z"

  CareTeam:
    type: object
    description: CareTeam resource
    properties:
      resourceType:
        type: string
        enum:
          - CareTeam
      id:
        type: string
      status:
        type: string
        enum:
          - proposed
          - active
          - suspended
          - inactive
          - entered-in-error
      name:
        type: string
      period:
        type: object
        properties:
          start:
            type: string
            format: dateTime
          end:
            type: string
            format: dateTime
      participant:
        type: object
        properties:
          role:
            type: object
            properties:
              text:
                type: string
          member:
            type: object
            properties:
              reference:
                type: string
              display:
                type: string
    required:
      - resourceType
      - status
    example:
      resourceType: CareTeam
      id: CARETEAM3-AUTHORIZATION
      status: active
      name: Hoitotiimi
      participant:
        role:
          text: "Hoitava lääkäri"
        member:
          reference: "Practitioner/PRACTITIONER1"
          display: "Pekka Pakarinen"

  Communication:
    type: object
    description: Communication resource
    properties:
      resourceType:
        type: string
        enum:
          - "Communication"
      text:
        type: object
        properties:
          status:
            type: string
          div:
            type: string
      status:
        type: string
        enum:
          - preparation
          - in-progress
          - suspended
          - aborted
          - completed
          - entered-in-error
      category:
        type: array
        items:
          type: object
          properties:
            text:
              type: string
      subject:
        type: object
        properties:
          reference:
            type: string
      basedOn:
        type: array
        items:
          type: object
          properties:
            reference:
              type: string
      sent:
        type: string
        format: date-time
#        enum:
#          - "2017-06-20T18:01:10-09:00"
      received:
        type: string
#        format: date-time
#        enum:
#          - "2017-06-20T18:01:10-09:00"
      sender:
        type: object
        properties:
          reference:
            type: string
      recipient:
        type: array
        items:
          type: object
          properties:
            reference:
              type: string
      payload:
        type: array
        items:
          type: object
          properties:
            contentString:
              type: string
    required:
      - resourceType
      - status
    example:
      resourceType: Communication
      text:
        status: generated
        div: You are progressing well! Good work!
      status: completed
      category:
        text: oda-careplan-comment
      subject:
        reference: Patient/PATIENT1
      basedOn:
        reference: CarePlan/CAREPLAN1-PATIENT1
      sent: "2017-06-20T18:01:10-08:00"
      received: "2017-06-20T18:01:10-09:00"
      sender:
        reference: Practitioner/PRACTITIONER1
      recipient:
        items:
          reference: Patient/PATIENT1
      payload:
        items:
          contentString: "You are progressing well! Good work!"

  EpisodeOfCare:
    type: object
    description: EpisodeOfCare object
    properties:
      resourceType:
        type: string
        enum:
          - EpisodeOfCare
      id:
        type: string
      status:
        type: string
        enum:
          - planned
          - waitlist
          - active
          - onhold
          - finished
          - cancelled
          - entered-in-error
      patient:
        type: object
        properties:
          reference:
            type: string
      careManager:
        type: object
        properties:
          reference:
            type: string
      team:
        type: string
        properties:
          reference:
            type: string
    required:
      - resourceType
      - status
    example:
      resourceType: EpisodeOfCare
      status: active
      patient:
        reference: "Patient/PATIENT1"
      careManager:
        reference: "Practitioner/PRACTITIONER2"
      team:
        reference: "CareTeam/CARETEAM2-CARE"

  Goal:
    type: object
    properties:
      resourceType:
        type: string
        enum:
          - Goal
      id:
        type: string
      status:
        type: string
        enum:
          - proposed
          - accepted
          - planned
          - in-progress
          - on-target
          - ahead-of-target
          - behind-target
          - sustaining
          - achieved
          - on-hold
          - cancelled
          - entered-in-error
          - rejected
      description:
        type: object
        properties:
          coding:
            type: object
            properties:
              system:
                type: string
              version:
                type: string
              code:
                type: string
              display:
                type: string
          text:
            type: string
    required:
      - resourceType
      - status
    example:
      resourceType: Goal
      status: proposed
      description:
        text: Lopeta tupakointi

  OperationOutcome:
    type: object
    properties:
      resourceType:
        type: string
      text:
        type: object
        properties:
          status:
            type: string
            enum:
              - fatal
              - error
              - warning
              - information
          div:
            type: string
      issue:
        type: array
        items:
          type: object
          properties:
            severity:
              type: string
              enum:
                - fatal
                - error
                - warning
                - information
            code:
              type: string
            details:
              type: object
              properties:
                coding:
                  type: object
                  properties:
                    system:
                      type: string
                    code:
                      type: string
                text:
                  type: string
            diagnostics:
              type: string
    required:
      - resourceType
      - issue
    example:
      resourceType: OperationOutcome
      issue:
        items:
          severity: error
          details:
            text: Operation unknown
